:import "spec"
:import ".." (Time)

:class TimeSpec
  :is Spec
  :const describes: "Time"
  
  :it "can describe a date and time"
    time = Time.utc(2036, 10, 7, 20, 36, 10, 777)
    @assert = time.year          == 2036
    @assert = time.month         == 10
    @assert = time.day           == 7
    @assert = time.hour          == 20
    @assert = time.minute        == 36
    @assert = time.second        == 10
    @assert = time.nanosecond    == 777
    @assert = time.total_seconds == 64242621370
  
  :it "can add or subtract other time durations"
    @assert =
      (Time.utc(2036, 10, 7, 20, 36, 10, 777) - Time.days(3))
      == Time.utc(2036, 10, 4, 20, 36, 10, 777)
    @assert =
      (Time.utc(2036, 10, 7, 20, 36, 10, 777) + Time.hours(7))
      == Time.utc(2036, 10, 8, 3, 36, 10, 777)
  
  :it "can be inspected"
    // TODO: Properly pad numbers with zeroes for a constant string width.
    @assert =
      Inspect[Time.utc(2036, 10, 7, 20, 36, 10, 777)]
      == "2036-10-7 20:36:10'777"
