ffi LibC:
  fun puts (CString) I32:

ffi LibPonyRT:
  fun pony_exitcode (I32) None:

primitive Greeting:
  const hello: "Hello, World!"
  const bye: "Goodbye, World!"

primitive Zero:
  fun "+" (other I32) I32:
    other

primitive BelligerentFour:
  fun "+" (other I32) I32:
    4 // (belligerently ignores the summand)

primitive InfiniteZeros:
  fun "[]" (index I64): Zero

interface Augend:
  fun "+" (other I32) I32:

class Sentence:
  prop text CString:
  new (@text = "[awkward silence]"):

actor Main:
  new:
    @do_stuff(Greeting)
  
  be do_stuff (greeting Greeting):
    none = ()
    
    maybe_greeting (Greeting | None) = greeting
    if maybe_greeting <: Greeting \
      @say_stuff(maybe_greeting)
    
    use_zero = False
    please_use_zero = True
    
    augend = case (
    | use_zero | Zero
    | please_use_zero | InfiniteZeros[999]
    | BelligerentFour
    )
    
    maybe_thirty_three (I32 | None) = I32[33]
    if maybe_thirty_three <: I32 \
      LibPonyRT.pony_exitcode(augend + maybe_thirty_three + 9)
  
  fun say_stuff (greeting Greeting):
    sentence = Sentence.new
    LibC.puts(sentence.text)
    sentence.text = greeting.hello
    LibC.puts(sentence.text)
    sentence.text = greeting.bye
    LibC.puts(sentence.text)
    None // TODO: remove
